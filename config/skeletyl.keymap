#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <locale/keys_de.h>

// The default keymap is roughly on Miryoku layout
// (https://github.com/manna-harbour/miryoku).
// Customize on your own on the config folder.

#define DEFAULT     0
#define NUMBER      1
#define SYMBOL      2
#define FUNC        3
#define MEDIA       4
#define SYSTEM      5
#define KEYS_LEFT   0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_RIGHT  5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS      30 31 32 33 34 35
#define HM_TAPPING_TERM 280
#define HM_QUICK_TAP 240
#define HM_PRIOR_IDLE 120
#define HM_L4 LEFT_CONTROL
#define HM_L3 LEFT_GUI
#define HM_L2 LEFT_ALT
#define HM_L1 LEFT_SHIFT
#define HM_L0 RIGHT_ALT
#define HM_R0 LEFT_ALT
#define HM_R1 RIGHT_SHIFT
#define HM_R2 RIGHT_ALT
#define HM_R3 RIGHT_GUI
#define HM_R4 RIGHT_CONTROL

&lt {
    tapping-term-ms = <280>;
    flavor = "hold-preferred";
    quick-tap-ms = <240>;
    require-prior-idle-ms = <120>;
};

/ {
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Left";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_QUICK_TAP>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Right";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_QUICK_TAP>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
            hold-trigger-on-release;
        };

        kp_sep: kp_seperator {
            compatible = "zmk,behavior-mod-morph";
            label = "Keypad Seperator";
            bindings = <&kp KP_COMMA>, <&kp KP_DOT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        eszett {
            bindings = <&kp DE_ESZETT>;
            key-positions = <17 11>;
            timeout-ms = <75>;
            slow-release;
            layers = <DEFAULT>;
        };

        umlaut_a {
            bindings = <&kp DE_A_UMLAUT>;
            key-positions = <17 10>;
            timeout-ms = <75>;
            slow-release;
            layers = <DEFAULT>;
        };

        umlaut_o {
            bindings = <&kp DE_O_UMLAUT>;
            key-positions = <12 8>;
            timeout-ms = <75>;
            slow-release;
            layers = <DEFAULT>;
        };

        umlaut_u {
            bindings = <&kp DE_U_UMLAUT>;
            key-positions = <12 6>;
            timeout-ms = <75>;
            slow-release;
            layers = <DEFAULT>;
        };

        suspend {
            bindings = <&kp C_SLEEP>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "";
            bindings = <
  &kp DE_Q          &kp DE_W          &kp DE_E          &kp DE_R          &kp DE_T            &kp DE_Z          &kp DE_U          &kp DE_I              &kp DE_O          &kp DE_P
  &hm_l HM_L4 DE_A  &hm_l HM_L3 DE_S  &hm_l HM_L2 DE_D  &hm_l HM_L1 DE_F  &hm_l HM_L0 DE_G    &hm_r HM_R0 DE_H  &hm_r HM_R1 DE_J  &hm_r HM_R2 DE_K      &hm_r HM_R3 DE_L  &hm_r HM_R4 DE_PLUS
  &kp DE_Y          &kp DE_X          &kp DE_C          &kp DE_V          &kp DE_B            &kp DE_N          &kp DE_M          &kp DE_COMMA          &kp DE_DOT        &kp DE_MINUS
                                      &lt NUMBER TAB    &kp SPACE         &lt FUNC ESCAPE     &lt MEDIA DELETE  &kp ENTER         &lt SYMBOL BACKSPACE
            >;
        };

        number_layer {
            display-name = "NUMBER";
            bindings = <
  &none      &kp HOME         &kp PRINTSCREEN       &kp PAGE_UP            &none        &kp KP_DIVIDE            &kp KP_NUMBER_7          &kp KP_NUMBER_8          &kp KP_NUMBER_9          &kp KP_MINUS
  &kp HM_L4  &hm_l HM_L3 END  &hm_l HM_L2 UP_ARROW  &hm_l HM_L1 PAGE_DOWN  &kp HM_L0    &hm_r HM_R0 KP_MULTIPLY  &hm_r HM_R1 KP_NUMBER_4  &hm_r HM_R2 KP_NUMBER_5  &hm_r HM_R3 KP_NUMBER_6  &hm_r HM_R4 KP_PLUS
  &none      &kp LEFT_ARROW   &kp DOWN_ARROW        &kp RIGHT_ARROW        &none        &kp KP_NUMBER_0          &kp KP_NUMBER_1          &kp KP_NUMBER_2          &kp KP_NUMBER_3          &kp_sep
                              &trans                &trans                 &trans       &trans                   &trans                   &trans
            >;
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
  &kp DE_EXCL   &kp DE_QUESTION       &kp DE_SECTION       &kp DE_DOLLAR            &kp DE_PERCENT      &kp DE_AMPERSAND     &kp DE_AT_SIGN            &kp DE_EURO         &kp DE_CARET          &kp DE_ASTERISK
  &kp DE_SLASH  &kp DE_LEFT_BRACKET   &kp DE_LEFT_BRACE    &kp DE_LEFT_PARENTHESIS  &kp DE_LESS_THAN    &kp DE_GREATER_THAN  &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_BACKSLASH
  &kp DE_PIPE   &kp DE_DOUBLE_QUOTES  &kp DE_SINGLE_QUOTE  &kp DE_ACUTE             &kp DE_GRAVE        &kp DE_CARET         &kp DE_DEGREE             &kp DE_TILDE        &kp DE_HASH           &kp DE_EQUAL
                                      &trans               &trans                   &trans              &trans               &trans                    &trans
            >;
        };

        func_layer {
            display-name = "FUNC";
            bindings = <
  &none             &kp F1          &kp F2          &kp F3          &kp F4            &kp CAPSLOCK      &kp KP_NUMLOCK  &none         &none         &none
  &kp HM_L4         &hm_l HM_L3 F5  &hm_l HM_L2 F6  &hm_l HM_L1 F7  &hm_l HM_L0 F8    &kp HM_R0         &kp HM_R1       &kp HM_R2     &kp HM_R3     &kp HM_R4
  &kp LS(LC(DE_T))  &kp F9          &kp F10         &kp F11         &kp F12           &kp LC(LS(DE_V))  &kp LC(DE_V)    &kp LC(DE_C)  &kp LC(DE_X)  &kp LC(LA(DE_T))
                                    &trans          &trans          &trans            &trans            &trans          &trans
            >;
        };

        media_layer {
            display-name = "MEDIA";
            bindings = <
  &none  &none  &none   &none   &none     &none   &none              &none             &none         &none
  &none  &none  &none   &none   &none     &none   &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOL_UP  &none
  &none  &none  &none   &none   &none     &none   &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT    &none
                &trans  &trans  &trans    &trans  &trans             &trans
            >;
        };

        system_layer {
            display-name = "SYSTEM";
            bindings = <
  &none        &none  &none   &none   &none     &none         &none         &none         &none         &none
  &sys_reset   &none  &none   &none   &none     &out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &sys_reset
  &bootloader  &none  &none   &none   &none     &out OUT_USB  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &bootloader
                      &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        two_handed {
            if-layers = <FUNC MEDIA>;
            then-layer = <SYSTEM>;
        };
    };
};
