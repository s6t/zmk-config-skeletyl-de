#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <locale/keys_de.h>
#include <zmk-helpers/helper.h>
#include <zmk-helpers/key-labels/36.h>

#define DEFAULT     0
#define NUMBER      1
#define SYMBOL      2
#define FUNC        3
#define MEDIA       4
#define SYSTEM      5
#define KEYS_LEFT   LT4 LT3 LT2 LT1 LT0 LM4 LM3 LM2 LM1 LM0 LB4 LB3 LB2 LB1 LB0
#define KEYS_RIGHT  RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS      LH2 LH1 LH0 RH0 RH1 RH2

#define ZMK_HOME_ROW_MODS(name, keys) \
/ { \
    behaviors { \
        name: name { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            flavor = "balanced"; \
            tapping-term-ms = <280>; \
            quick-tap-ms = <240>; \
            require-prior-idle-ms = <120>; \
            hold-trigger-key-positions = <keys>; \
            hold-trigger-on-release; \
            bindings = <&kp>, <&kp>; \
        }; \
    }; \
};

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <280>;
    quick-tap-ms = <240>;
    require-prior-idle-ms = <120>;
};

&sk {
    quick-release;
};

&caps_word {
    continue-list = <LS(DE_MINUS) DE_MINUS BACKSPACE KP_NUMBER_0 KP_NUMBER_1 KP_NUMBER_2 KP_NUMBER_3 KP_NUMBER_4 KP_NUMBER_5 KP_NUMBER_6 KP_NUMBER_7 KP_NUMBER_8 KP_NUMBER_9>;
};

ZMK_HOME_ROW_MODS(hml, KEYS_RIGHT THUMBS)
ZMK_HOME_ROW_MODS(hmr, KEYS_LEFT THUMBS)

ZMK_MOD_MORPH(kp_sep,
    mods = <(MOD_LSFT)>;
    bindings = <&kp KP_COMMA>, <&kp KP_DOT>;
)

ZMK_COMBO_4(eszett,      &kp DE_ESZETT,   LM3 RM3, DEFAULT)
ZMK_COMBO_4(umlaut_a,    &kp DE_A_UMLAUT, LM4 RM3, DEFAULT)
ZMK_COMBO_4(umlaut_o,    &kp DE_O_UMLAUT, LM3 RT3, DEFAULT)
ZMK_COMBO_4(umlaut_u,    &kp DE_U_UMLAUT, LM3 RT1, DEFAULT)
ZMK_COMBO_4(shift_left,  &sk LEFT_SHIFT,  LM2 LM1, DEFAULT)
ZMK_COMBO_4(shift_right, &sk LEFT_SHIFT,  RM1 RM2, DEFAULT)
ZMK_COMBO_3(suspend,     &kp C_SLEEP,     LM0 RM0)

ZMK_LAYER(default_layer,
    &kp DE_Q        &kp DE_W        &kp DE_E         &kp DE_R         &kp DE_T           &kp DE_Z          &kp DE_U         &kp DE_I              &kp DE_O        &kp DE_P
    &hml LGUI DE_A  &hml LALT DE_S  &hml LSHFT DE_D  &hml LCTRL DE_F  &kp DE_G           &kp DE_H          &hmr LCTRL DE_J  &hmr LSHFT DE_K       &hmr LALT DE_L  &hmr LGUI DE_PLUS
    &kp DE_Y        &kp DE_X        &kp DE_C         &kp DE_V         &kp DE_B           &kp DE_N          &kp DE_M         &kp DE_COMMA          &kp DE_DOT      &kp DE_MINUS
                                    &lt NUMBER TAB   &kp SPACE        &lt FUNC ESCAPE    &lt MEDIA DELETE  &kp ENTER        &lt SYMBOL BACKSPACE
)

ZMK_LAYER(number_layer,
    &kp LC(HOME)       &kp HOME        &kp PRINTSCREEN      &kp PAGE_UP           &none     &kp KP_DIVIDE    &kp KP_NUMBER_7         &kp KP_NUMBER_8         &kp KP_NUMBER_9        &kp KP_MINUS
    &hml LGUI LC(END)  &hml LALT END   &hml LSHFT UP_ARROW  &hml LCTRL PAGE_DOWN  &none     &kp KP_MULTIPLY  &hmr LCTRL KP_NUMBER_4  &hmr LSHFT KP_NUMBER_5  &hmr LALT KP_NUMBER_6  &hmr LGUI KP_PLUS
    &none              &kp LEFT_ARROW  &kp DOWN_ARROW       &kp RIGHT_ARROW       &none     &kp KP_NUMBER_0  &kp KP_NUMBER_1         &kp KP_NUMBER_2         &kp KP_NUMBER_3        &kp_sep
                                       &trans               &trans                &trans    &trans           &trans                  &trans
)

ZMK_LAYER(symbol_layer,
    &kp DE_EXCL   &kp DE_QUESTION       &kp DE_SECTION       &kp DE_DOLLAR            &kp DE_PERCENT      &kp DE_AMPERSAND     &kp DE_AT_SIGN            &kp DE_EURO         &kp DE_CARET          &kp DE_ASTERISK
    &kp DE_SLASH  &kp DE_LEFT_BRACKET   &kp DE_LEFT_BRACE    &kp DE_LEFT_PARENTHESIS  &kp DE_LESS_THAN    &kp DE_GREATER_THAN  &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_BACKSLASH
    &kp DE_PIPE   &kp DE_DOUBLE_QUOTES  &kp DE_SINGLE_QUOTE  &kp DE_ACUTE             &kp DE_GRAVE        &kp DE_CARET         &kp DE_DEGREE             &kp DE_TILDE        &kp DE_HASH           &kp DE_EQUAL
                                        &trans               &trans                   &trans              &trans               &trans                    &trans
)

ZMK_LAYER(func_layer,
    &kp LC(LS(DE_T))  &kp LC(LS(DE_W))  &kp LC(DE_N7)     &kp LC(F5)        &kp LC(DE_Z)    &kp KP_NUMLOCK  &kp F1  &kp F2   &kp F3   &kp F4
    &kp LC(DE_A)      &kp LC(LS(DE_X))  &kp LC(LS(DE_C))  &kp LC(LS(DE_V))  &kp LC(DE_F)    &kp CAPSLOCK    &kp F5  &kp F6   &kp F7   &kp F8
    &kp LC(DE_S)      &kp LC(DE_X)      &kp LC(DE_C)      &kp LC(DE_V)      &kp LC(DE_H)    &caps_word      &kp F9  &kp F10  &kp F11  &kp F12
                                        &trans            &trans            &trans          &trans          &trans  &trans
)

ZMK_LAYER(media_layer,
    &none  &none  &none   &none   &none     &none   &none              &none             &none         &none
    &none  &none  &none   &none   &none     &none   &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOL_UP  &none
    &none  &none  &none   &none   &none     &none   &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT    &none
                  &trans  &trans  &trans    &trans  &trans             &trans
)

ZMK_LAYER(system_layer,
    &none        &none  &none   &none   &none     &studio_unlock  &none         &none         &none         &none
    &sys_reset   &none  &none   &none   &none     &out OUT_BLE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &sys_reset
    &bootloader  &none  &none   &none   &none     &out OUT_USB    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &bootloader
                        &trans  &trans  &trans    &trans          &trans        &trans
)

ZMK_CONDITIONAL_LAYER(system, FUNC MEDIA, SYSTEM)
